class UI {
	function void drawHeaderStatic(){
		do UI.drawHeaderLine();
		do UI.drawWinsStatic();
		do UI.drawLosesStatic();
		return;
	}
	function void drawHeader(int winsCount, int losesCount){
		do UI.drawHeaderStatic();
		do UI.drawHeaderWinsCount(winsCount);
		do UI.drawHeaderLosesCount(losesCount);
		return;
	}
	function void drawHeaderLine(){	
		do Screen.setColor(true);
		do Screen.drawLine(0, 12, 511, 12);
		return;
	}
	function void drawLosesStatic(){
		do Output.moveCursor(0, 14);
		do Output.printString("LOSES: ");
		return;
	}
	function void drawHeaderLosesCount(int count){
		do Output.moveCursor(0, 21);
		do Output.printInt(count);
		return;
	}
	function void clearHeaderLosesCount(){
		do UI.clearOutputString(0, 21, 6);
		return;
	}
	function void redrawHeaderLosesCount(int count){
		do UI.clearHeaderLosesCount();
		do UI.drawHeaderLosesCount(count);
		return;
	}
	function void drawWinsStatic(){
		do Output.moveCursor(0, 1);
		do Output.printString("WINS: ");	
		return;
	}
	function void drawHeaderWinsCount(int count){
		do Output.moveCursor(0, 7);
		do Output.printInt(count);
		return;
	}
	function void clearHeaderWinsCount(){
		do UI.clearOutputString(0, 7, 6);
		return;
	}
	function void redrawHeaderWinsCount(int count){
		do UI.clearHeaderWinsCount();
		do UI.drawHeaderWinsCount(count);
		return;
	}
	function void clearOutputString(int startI, int startJ, int lineLength){
		var int endJ;
		let endJ = startJ + lineLength;
		do Output.moveCursor(startI, endJ);
		while (startJ < endJ){
			do Output.backSpace();
			let endJ = endJ - 1;
		}
		return;
		
	}
	function void clearMainWindow(){
		do Screen.setColor(false);
		do Screen.drawRectangle(0, 13, 511, 255);
		return;
	}
	function void drawMainMenuStatic(){
		do UI.drawMainMenuGameName();
		do UI.drawMainMenuPlayButton();
		do UI.drawMainMenuExitButton();
		return;
	}	
	function void drawMainMenu(int selectedButton){
		do UI.drawMainMenuStatic();
		do UI.drawMainMenuSelectedButtonUnderline(selectedButton);
		return;
	}
	function void drawMainMenuSelectedButtonUnderline(int selectedButton){
		if (selectedButton = 0){
			do UI.drawMainMenuPlayButtonUnderline();
			return;
		}
		if (selectedButton = 1){
			do UI.drawMainMenuExitButtonUnderline();
			return;
		}
		return;
	}
	function void clearMainMenuSelectedButtonUnderline(int selectedButton){
		if (selectedButton = 0){
			do UI.clearMainMenuPlayButtonUnderline();
			return;
		}
		if (selectedButton = 1){
			do UI.clearMainMenuExitButtonUnderline();
			return;
		}
		return;
	}
	function void drawMainMenuGameName(){
		do Screen.setColor(true);
		do UI.drawRectangleOutline(160, 40, 352, 56);
		do Output.moveCursor(4, 24);
		do Output.printString("GUESS THE NUMBER");
		return;
	}
	function void drawRectangleOutline(int x, int y, int x2, int y2){
		do Screen.drawLine(x, y, x2, y);
		do Screen.drawLine(x, y, x, y2);
		do Screen.drawLine(x, y2, x2, y2);
		do Screen.drawLine(x2, y, x2, y2);	
		return;
	}
	function void drawMainMenuButtonStatic(int x, int y){
		do Screen.setColor(true);
		do UI.drawRectangleOutline(x, y, x + 64, y + 32);
		return;
	}
	function void drawMainMenuPlayButton(){
		do UI.drawMainMenuButtonStatic(224, 78);
		do Output.moveCursor(8, 30);
		do Output.printString("PLAY");
		return;
	}
	function void drawMainMenuExitButton(){
		do UI.drawMainMenuButtonStatic(224, 144);
		do Output.moveCursor(14, 30);
		do Output.printString("EXIT");
		return;
	}
	function void drawMainMenuPlayButtonUnderline(){
		do Screen.setColor(true);
		do UI.drawMainMenuPlayButtonUnderlineWithoutSetColor();
		return;
	}
	function void clearMainMenuPlayButtonUnderline(){
		do Screen.setColor(false);
		do UI.drawMainMenuPlayButtonUnderlineWithoutSetColor();
		return;
	}
	function void drawMainMenuPlayButtonUnderlineWithoutSetColor(){
		do Screen.drawLine(240, 102, 272, 102); 
		return;
	}
	function void drawMainMenuExitButtonUnderline(){
		do Screen.setColor(true);
		do UI.drawMainMenuExitButtonUnderlineWithoutSetColor();
		return;
	}
	function void clearMainMenuExitButtonUnderline(){
		do Screen.setColor(false);
		do UI.drawMainMenuExitButtonUnderlineWithoutSetColor();
		return;
	}
	function void drawMainMenuExitButtonUnderlineWithoutSetColor(){
		do Screen.drawLine(240, 168, 272, 168); 
		return;
	}
	function void drawSeedPrompt(){
		do Output.moveCursor(12, 14);
		do Output.printString("Press any key to generate seed...");
		return;
	}
	function void drawGameWindowStatic(){
		do UI.drawGameWindowRemainedAttempsStatic();
		do UI.drawGameWindowNumberRangeStatic();
		do UI.drawGameWindowGreaterStatic();
		do UI.drawGameWindowLessStatic();
		do UI.drawGameWindowInputBoxStatic();
		return;
	}
	function void drawGameWindow(int minNumber, int maxNumber){
		do UI.drawGameWindowStatic();
		do UI.drawGameWindowNumberRange(minNumber, maxNumber);
		return;
	}
	function void drawGameWindowNumberRangeStatic(){
		do Screen.setColor(true);
		do UI.drawRectangleOutline(144, 62, 368, 80);
		return;
	}
	function void drawGameWindowNumberRange(int minNumber, int maxNumber){
		do Output.moveCursor(6, 20);
		do Output.printString("NUMBER RANGE: [");
		do Output.printInt(minNumber);
		do Output.printString(", ");
		do Output.printInt(maxNumber);
		do Output.printString("]");
		return;
	}
	function void drawGameWindowLessStatic(){	
		do Screen.setColor(true);
		do UI.drawRectangleOutline(80, 96, 192, 224);
		do Screen.drawLine(80, 112, 192, 112);
		do Output.moveCursor(9, 15);
		do Output.printString("LESS");
		return;	
	}
	function void drawGameWindowGreaterStatic(){
		do Screen.setColor(true);
		do UI.drawRectangleOutline(322, 96, 434, 224);
		do Screen.drawLine(322, 112, 434, 112);
		do Output.moveCursor(9, 44);
		do Output.printString("GREATER");
		return;
	}
	function void drawGameWindowRemainedAttempsStatic(){
		do Screen.setColor(true);
		do UI.drawRectangleOutline(144, 40, 368, 58);
		do Output.moveCursor(4, 20);
		do Output.printString("ATTEMPS REMAINED: ");
		return;
	}
	function void drawGameWindowRemainedAttempsCount(int count){
		do Output.moveCursor(4, 38);
		do Output.printInt(count);
		return;
	}
	function void clearGameWindowRemainAttempsScore(){
		do UI.clearOutputString(4, 38, 5);
		return;
	}
	function void drawGameWindowInputBoxStatic(){
		do Screen.setColor(true);
		do UI.drawRectangleOutline(208, 96, 308, 136);
		do Screen.drawLine(208, 112, 308, 112);
		do Output.moveCursor(9, 30);
		do Output.printString("INPUT");
		return;
	}
	function void moveGameWindowInputCursor(){
		do Output.moveCursor(11, 30);
		return;
	}
	function void clearGameWindowInput(){
		do UI.clearOutputString(11, 30, 3);
		return;
	}
	function void drawGameWindowGreaterNumber(int greaterNumbersCount, int number){
		do Output.moveCursor(11 + greaterNumbersCount, 44);
		do Output.printInt(number);
		return;	
	}
	function void drawGameWindowLessNumber(int lessNumbersCount, int number){
		do Output.moveCursor(11 + lessNumbersCount, 15);
		do Output.printInt(number);
		return;	
	}
	function void drawWinWindowStatic(){
		do Output.moveCursor(10, 27);
		do Output.printString("VICTORY!");
		return;
	}
	function void drawWinWindow(){
		do UI.drawWinWindowStatic();
		return;
	}
	function void drawLoseWindowStatic(){
		do Output.moveCursor(10, 27);
		do Output.printString("GAME OVER");
		return; 
	}
	function void drawLoseWindow(){
		do UI.drawLoseWindowStatic();
		return;
	}
}
